
The Experiment Container
========================

This notebook explains how the database works as an experiment
container.

.. code:: ipython3

    import qcodes as qc
    from qcodes.dataset.database import initialise_database

The database
------------

The database on file is selected via the QCoDeS configuration file and a
connection to it is set up at import time. There is always only one
database selected as the "active" one.

The config file
~~~~~~~~~~~~~~~

We'll be modifying the config file in a second, so first a brief word
about the config system.

Only one config file can be used at a time. The default config file
should not be overwritten, so if you have any modifications, you should
save the updated config file on your home directory **OR** in the
current working directory of your script/notebook. The QCoDeS config
system first looks in the current directory for a config file and then
in the home directory for one and only then - if no config files where
found - does it fall back to using the default one. The default config
is located in ``qcodes/qcodes/config``.

.. code:: ipython3

    # To inspect the config file, use
    configuration = qc.config
    print(f'Using config file from {configuration.current_config_path}')
    print(f'Database location: {configuration["core"]["db_location"]}')


.. parsed-literal::

    Using config file from /home/travis/qcodesrc.json
    Database location: ./exp_container_tutorial.db


Note that the default setting for the database location is a relative
path. That is a sane default setting, but not always what you want. If
you execute scripts from many different folders on your machine, you
should change the default location to an absolute path pointing to your
data folder, or you will end up with multiple databases.

.. code:: ipython3

    # Changing the settings can done like so:
    
    configuration['core']['db_location'] = '~/my/particular/absolute/path/database.db'
    
    # To keep the changes after a kernel restart, save them to disk
    # configuration.save_to_home()  # this saves to the configuration file to the home directory

For the sake of pedagogical clarity, we now create a new empty default
database.

.. code:: ipython3

    # point the config system to the new location
    configuration['core']['db_location'] = './exp_container_tutorial.db'
    # now save the config file in home. 
    # NOTE: This config file will 
    # from now on loaded by qcodes instead of the default.
    configuration.save_to_home()
    # create an empty database based on the config file
    initialise_database()

The experiments inside the database
-----------------------------------

The database holds a certain number of **experiments**. They may be
viewed:

.. code:: ipython3

    qc.dataset.experiment_container.experiments()




.. parsed-literal::

    [offline_plotting_experiment#some_sample#1@./exp_container_tutorial.db
     ---------------------------------------------------------------------
     1-results-1-config,voltage-4
     2-results-2-config,voltage-5
     3-results-3-voltage,response-50
     4-results-4-sample,feature-11
     5-results-5-sample,gate_v,conductance-300
     6-results-6-sample,gate_v,conductance-300
     7-results-7-gate_v,bias_v,usefulness-7500
     8-results-8-gate_v,bias_v,usefulness-7500
     9-results-9-sample,gate_v,usefulness-300
     10-results-10-sample,gate_v,usefulness-300,
     test_plot_by_id#nosample#2@./exp_container_tutorial.db
     ------------------------------------------------------
     11-results-1-x,y-250
     12-results-2-t,y-50
     13-results-3-x,y,y2-500
     14-results-4-x,t,z-1250
     15-results-5-x,t,z-1250
     16-results-6-x,t,z-1135
     17-results-7-x,y-250
     18-results-8-x,t,z-1250
     19-results-9-x,t,z-50000,
     snapshot_experiment#no_sample_yet#3@./exp_container_tutorial.db
     ---------------------------------------------------------------
     20-results-1-instr_input,instr_output-1,
     subscription_tutorial#no_sample#4@./exp_container_tutorial.db
     -------------------------------------------------------------
     21-test-1-x,y-150
     22-test-2-blip,blop-100,
     benchmarking#the sample is a lie#5@./exp_container_tutorial.db
     --------------------------------------------------------------
     23-benchmark_data-1-None-0
     24-doubledata-2-x,y,z-1000
     25-singledata-3-x,y,z-100
     26-zerodata-4-x,y,z-1
     27-array1Ddata-5-x,y,z-800
     28-array0Ddata-6-x,y,z-811
     29-many_data-7-x,y,z-810000
     30-sweep gate-8-None-0,
     majorana-qbuit#flying brdige#6@./exp_container_tutorial.db
     ----------------------------------------------------------
     31-sweep gate-1-a,b,c-1
     32-sweep gate-2-None-0
     33-test-3-x,y-100
     34-test-4-x,y-100
     35-test-5-x,y-100
     36-test-6-x,y,z-50,
     old_data_loading#no_sample#7@./exp_container_tutorial.db
     --------------------------------------------------------
     37-results-1-ch1,voltage-201
     38-results-2-ch1,ch2,voltage-36]



Not surprisingly, our new database is empty. Let us add some
experiments.

.. code:: ipython3

    qc.dataset.experiment_container.new_experiment('first_exp', sample_name='old_sample')
    qc.dataset.experiment_container.new_experiment('second_exp', sample_name='slightly_newer_sample')
    qc.dataset.experiment_container.new_experiment('second_exp', sample_name='brand_new_sample')




.. parsed-literal::

    second_exp#brand_new_sample#10@./exp_container_tutorial.db
    ----------------------------------------------------------



.. code:: ipython3

    qc.dataset.experiment_container.experiments()




.. parsed-literal::

    [offline_plotting_experiment#some_sample#1@./exp_container_tutorial.db
     ---------------------------------------------------------------------
     1-results-1-config,voltage-4
     2-results-2-config,voltage-5
     3-results-3-voltage,response-50
     4-results-4-sample,feature-11
     5-results-5-sample,gate_v,conductance-300
     6-results-6-sample,gate_v,conductance-300
     7-results-7-gate_v,bias_v,usefulness-7500
     8-results-8-gate_v,bias_v,usefulness-7500
     9-results-9-sample,gate_v,usefulness-300
     10-results-10-sample,gate_v,usefulness-300,
     test_plot_by_id#nosample#2@./exp_container_tutorial.db
     ------------------------------------------------------
     11-results-1-x,y-250
     12-results-2-t,y-50
     13-results-3-x,y,y2-500
     14-results-4-x,t,z-1250
     15-results-5-x,t,z-1250
     16-results-6-x,t,z-1135
     17-results-7-x,y-250
     18-results-8-x,t,z-1250
     19-results-9-x,t,z-50000,
     snapshot_experiment#no_sample_yet#3@./exp_container_tutorial.db
     ---------------------------------------------------------------
     20-results-1-instr_input,instr_output-1,
     subscription_tutorial#no_sample#4@./exp_container_tutorial.db
     -------------------------------------------------------------
     21-test-1-x,y-150
     22-test-2-blip,blop-100,
     benchmarking#the sample is a lie#5@./exp_container_tutorial.db
     --------------------------------------------------------------
     23-benchmark_data-1-None-0
     24-doubledata-2-x,y,z-1000
     25-singledata-3-x,y,z-100
     26-zerodata-4-x,y,z-1
     27-array1Ddata-5-x,y,z-800
     28-array0Ddata-6-x,y,z-811
     29-many_data-7-x,y,z-810000
     30-sweep gate-8-None-0,
     majorana-qbuit#flying brdige#6@./exp_container_tutorial.db
     ----------------------------------------------------------
     31-sweep gate-1-a,b,c-1
     32-sweep gate-2-None-0
     33-test-3-x,y-100
     34-test-4-x,y-100
     35-test-5-x,y-100
     36-test-6-x,y,z-50,
     old_data_loading#no_sample#7@./exp_container_tutorial.db
     --------------------------------------------------------
     37-results-1-ch1,voltage-201
     38-results-2-ch1,ch2,voltage-36,
     first_exp#old_sample#8@./exp_container_tutorial.db
     --------------------------------------------------,
     second_exp#slightly_newer_sample#9@./exp_container_tutorial.db
     --------------------------------------------------------------,
     second_exp#brand_new_sample#10@./exp_container_tutorial.db
     ----------------------------------------------------------]



We notice that each experiment is labelled by an integer. This is the
**exp\_id** that can be used when looking up properties of each
experiment.

Let us add some runs to experiment 2 ("second\_exp"). For the sake of
clarity, we don't add any data to the runs here. We refer to the
``Dataset Context Manager.ipynb`` for detailed information on how to
properly create and populate runs.

.. code:: ipython3

    qc.dataset.data_set.new_data_set('a_good_run', exp_id=2)




.. parsed-literal::

    a_good_run #39@./exp_container_tutorial.db
    ------------------------------------------



.. code:: ipython3

    qc.dataset.data_set.new_data_set('a_nother_run', exp_id=2)




.. parsed-literal::

    a_nother_run #40@./exp_container_tutorial.db
    --------------------------------------------



We may now inspect experiment 2.

.. code:: ipython3

    exp_2 = qc.dataset.experiment_container.load_experiment(2)

.. code:: ipython3

    # Printing the experiment will reveal the runs
    
    print(exp_2)


.. parsed-literal::

    test_plot_by_id#nosample#2@./exp_container_tutorial.db
    ------------------------------------------------------
    11-results-1-x,y-250
    12-results-2-t,y-50
    13-results-3-x,y,y2-500
    14-results-4-x,t,z-1250
    15-results-5-x,t,z-1250
    16-results-6-x,t,z-1135
    17-results-7-x,y-250
    18-results-8-x,t,z-1250
    19-results-9-x,t,z-50000
    39-a_good_run-10-None-0
    40-a_nother_run-11-None-0


In a similar way, we may of course add runs to the other two
experiments. Now, the alert reader will have noticed that ``exp_id`` is
a keyword argument in ``new_data_set``. What is the default then? --The
default is that the run is added to the experiment with the **highest**
``exp_id`` in the database.
