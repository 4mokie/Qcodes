
Example script for Keithley driver
==================================

.. code:: ipython3

    import matplotlib.pyplot as plt
    import time
    import numpy as np
    from imp import reload
    import qcodes as qc



.. parsed-literal::

    <IPython.core.display.Javascript object>



.. raw:: html

    <style>.qcodes-output-view:not(.ui-draggable) {
        bottom: 0;
        right: 5px;
    }
    .qcodes-output-view {
        position: fixed;
        z-index: 999;
        background-color: #fff;
        box-shadow: 0 0 12px 1px rgba(87, 87, 87, 0.2);
    }
    
    .qcodes-output-header  {
        float: right;
    }
    
    .qcodes-output-view span {
        padding: 2px 6px 3px 12px;
    }
    
    .qcodes-output-view .btn {
        margin: 0 3px 0 0;
    }
    
    .qcodes-output-view[qcodes-state=docked] .qcodes-docked,
    .qcodes-output-view[qcodes-state=floated] .qcodes-floated,
    .qcodes-output-view[qcodes-state=minimized] .qcodes-minimized,
    .qcodes-output-view[qcodes-state=minimized] .qcodes-content {
        display: none;
    }
    
    .qcodes-output-view .disabled {
        opacity: 0.4;
    }
    
    .qcodes-abort-loop {
        background-color: #844;
        color: #fff;
    }
    
    .qcodes-output-view pre {
        clear: both;
        margin: 0;
        border: 0;
        border-top: 1px solid #ccc;
        background-color: #ffe;
        min-height: 50px;
        max-height: 400px;
        min-width: 400px;
        max-width: 1000px;
    }</style>


Keithley driver
---------------

What to do:

-  implement add functionality of the driver
-  add documentation to the functions

.. code:: ipython3

    import qcodes.instrument_drivers
    import qcodes.instrument_drivers.tektronix.Keithley_2700 as keith




.. parsed-literal::

    <module 'qcodes.instrument_drivers.tektronix.Keithley_2700' from 'd:\\users\\eendebakpt\\qcodes\\qcodes\\instrument_drivers\\tektronix\\Keithley_2700.py'>



.. code:: ipython3

    k1 = keith.Keithley_2700('Keithley', 'GPIB1::15::INSTR')
    k1.add_parameter('READ', get_cmd='READ?', label='Keithley value', get_parser=float)


.. parsed-literal::

    Connected to:  KEITHLEY INSTRUMENTS INC., MODEL 2700, 0792116, B06  /A02    in 0.17s


.. code:: ipython3

    print('current mode: %s' % k1.get('mode'))


.. parsed-literal::

    current mode: VOLT:DC


.. code:: ipython3

    for i in range(6):
        print('measure: %.6f'  % k1.readnext() )


.. parsed-literal::

    measure: -0.095112
    measure: -0.104225
    measure: -0.112567
    measure: -0.129525
    measure: -0.137803
    measure: -0.146068


.. code:: ipython3

    station = qc.Station('Keithley')
    
    # could measure any number of things by adding arguments to this
    # function call, but here we're just measuring one, the meter mode
    station.set_measurement(k1.mode)
    
    qc.active_children()




.. parsed-literal::

    []



.. code:: ipython3

    station.measure()




.. parsed-literal::

    ['VOLT:DC']



.. code:: ipython3

    print(k1.nplc.__doc__)


.. parsed-literal::

    Get integration time in Number of PowerLine Cycles.
    To get the integrationtime in seconds, use get_integrationtime().
    Parameter class:
    * `name` nplc
    * `label` nplc
    * `units` APER
    

