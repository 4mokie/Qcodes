
Qcodes example with Mercury IPS (Magnet)
========================================

.. code:: ipython3

    %matplotlib nbagg
    import matplotlib.pyplot as plt
    import time
    import numpy as np
    import re
    
    import qcodes as qc
    
    qc.set_mp_method('spawn')  # force Windows behavior on mac
    
    # this makes a widget in the corner of the window to show and control
    # subprocesses and any output they would print to the terminal
    qc.show_subprocess_widget()



.. parsed-literal::

    <IPython.core.display.Javascript object>



.. raw:: html

    <style>.qcodes-output-view:not(.ui-draggable) {
        bottom: 0;
        right: 5px;
    }
    .qcodes-output-view {
        position: fixed;
        z-index: 999;
        background-color: #fff;
        box-shadow: 0 0 12px 1px rgba(87, 87, 87, 0.2);
    }
    
    .qcodes-output-header  {
        float: right;
    }
    
    .qcodes-output-view span {
        padding: 2px 6px 3px 12px;
    }
    
    .qcodes-output-view .btn {
        margin: 0 3px 0 0;
    }
    
    .qcodes-output-view[qcodes-state=docked] .qcodes-docked,
    .qcodes-output-view[qcodes-state=floated] .qcodes-floated,
    .qcodes-output-view[qcodes-state=minimized] .qcodes-minimized,
    .qcodes-output-view[qcodes-state=minimized] .qcodes-content {
        display: none;
    }
    
    .qcodes-output-view .disabled {
        opacity: 0.4;
    }
    
    .qcodes-abort-loop {
        background-color: #844;
        color: #fff;
    }
    
    .qcodes-output-view pre {
        clear: both;
        margin: 0;
        border: 0;
        border-top: 1px solid #ccc;
        background-color: #ffe;
        min-height: 50px;
        max-height: 400px;
        min-width: 400px;
        max-width: 1000px;
    }</style>


.. code:: ipython3

    from qcodes.instrument_drivers.oxford.mercuryiPS import MercuryiPS

.. code:: ipython3

    magnet = MercuryiPS(name = 'Magnet', address='ASRL10::INSTR')# , server_name=None

.. code:: ipython3

    # this does not work with the remote server thing
    # print(magnet.axes)
    # print(magnet.info)
    print(magnet.x_fld.get())
    print(magnet.x_fldC.get())


.. parsed-literal::

    0.0
    3.352161306002045e-06


.. code:: ipython3

    # magnet.hold()
    magnet.x_ACTN.get()




.. parsed-literal::

    'HOLD'



.. code:: ipython3

    magnet.x_rate.get()




.. parsed-literal::

    0.05



.. code:: ipython3

    magnet.x_setpoint.get()




.. parsed-literal::

    0.0



.. code:: ipython3

    magnet.x_ACTN.set('RTOZ')
    print(magnet.x_ACTN.get())
    time.sleep(1)
    print(magnet.x_ACTN.get())


.. parsed-literal::

    RTOZ
    HOLD


