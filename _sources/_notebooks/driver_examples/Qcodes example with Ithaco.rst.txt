
Qcodes example with Ithaco
==========================

.. code:: ipython3

    # %matplotlib nbagg
    %gui qt 
    import matplotlib.pyplot as plt
    import time
    import numpy as np
    
    import qcodes as qc
    from qcodes.utils.validators import Enum, Strings
    import qcodes.instrument_drivers.tektronix.Keithley_2600 as keith
    import qcodes.instrument_drivers.agilent.Agilent_34400A as agi
    import qcodes.instrument_drivers.ithaco.Ithaco_1211 as ithaco
    
    from qcodes.instrument.parameter import Parameter, StandardParameter
    
    qc.set_mp_method('spawn')  # force Windows behavior on mac
    
    # this makes a widget in the corner of the window to show and control
    # subprocesses and any output they would print to the terminal
    qc.show_subprocess_widget()




.. parsed-literal::

    <IPython.core.display.Javascript object>



.. raw:: html

    <style>.qcodes-output-view:not(.ui-draggable) {
        bottom: 0;
        right: 5px;
    }
    .qcodes-output-view {
        position: fixed;
        z-index: 999;
        background-color: #fff;
        box-shadow: 0 0 12px 1px rgba(87, 87, 87, 0.2);
    }
    
    .qcodes-output-header  {
        float: right;
    }
    
    .qcodes-output-view span {
        padding: 2px 6px 3px 12px;
    }
    
    .qcodes-output-view .btn {
        margin: 0 3px 0 0;
    }
    
    .qcodes-output-view[qcodes-state=docked] .qcodes-docked,
    .qcodes-output-view[qcodes-state=floated] .qcodes-floated,
    .qcodes-output-view[qcodes-state=minimized] .qcodes-minimized,
    .qcodes-output-view[qcodes-state=minimized] .qcodes-content {
        display: none;
    }
    
    .qcodes-output-view .disabled {
        opacity: 0.4;
    }
    
    .qcodes-abort-loop {
        background-color: #844;
        color: #fff;
    }
    
    .qcodes-output-view pre {
        clear: both;
        margin: 0;
        border: 0;
        border-top: 1px solid #ccc;
        background-color: #ffe;
        min-height: 50px;
        max-height: 400px;
        min-width: 400px;
        max-width: 1000px;
    }</style>


.. code:: ipython3

    import time
    class Timer(object):
        def __init__(self, name=None):
            self.name = name
    
        def __enter__(self):
            self.tstart = time.time()
    
        def __exit__(self, type, value, traceback):
            if self.name:
                print('[%s]' % self.name,)
            print('Elapsed: %s' % (time.time() - self.tstart))

.. code:: ipython3

    # create Instruments
    k1 = keith.Keithley_2600('Keithley1', 'GPIB0::15::INSTR',channel='a')
    k2 = keith.Keithley_2600('Keithley2', 'GPIB0::15::INSTR',channel='b')
    
    a1 = agi.Agilent_34400A('Agilent1', 'GPIB0::11::INSTR')
    a2 = agi.Agilent_34400A('Agilent2', 'GPIB0::6::INSTR')
    
    camp = ithaco.Ithaco_1211('camp1')
    camp.sens.set(1e-4)
    
    curr = ithaco.CurrentParameter(a2.volt, camp)
    
    # set integration time (number of line cycles)
    a1.NPLC.set(1)
    a2.NPLC.set(1)

.. code:: ipython3

    camp.snapshot()




.. parsed-literal::

    {'functions': {},
     'metadata': {'info': {'model': '1211',
       'serial_number': None,
       'software_revision': None,
       'vendor': 'Ithaco (DL Instruments)'}},
     'parameters': {'invert': {'ts': '2016-04-21 15:56:06', 'value': True},
      'risetime': {'ts': '2016-04-21 15:56:06', 'value': 0.3},
      'sens': {'ts': '2016-04-21 15:56:06', 'value': 0.0001},
      'sens_x': {'ts': '2016-04-21 15:56:06', 'value': 1},
      'suppression': {'ts': '2016-04-21 15:56:06', 'value': 1e-07}}}



.. code:: ipython3

    a2.volt.units




.. parsed-literal::

    'V'



.. code:: ipython3

    curr.units




.. parsed-literal::

    ('V', 'A')




.. code:: ipython3

    data = qc.Loop(k1.volt[-5:5:1], 0).each(curr).run(location='testsweep', overwrite=True)
    plotQ = qc.QtPlot(data.current,windowTitle='YEAH')


.. parsed-literal::

    DataSet: DataMode.PULL_FROM_SERVER, location='testsweep'
       current: current
       volt: volt
       volt_set: volt
    started at 2016-04-21 15:56:10


.. code:: ipython3

    plotQ




.. parsed-literal::

    <qcodes.plots.pyqtgraph.QtPlot at 0x7ed0668>



.. code:: ipython3

    data.sync()
    data.arrays




.. parsed-literal::

    {'current': DataArray[10]: current
     array([ -4.98941000e-04,  -3.99618000e-04,  -3.00370000e-04,
             -2.01084000e-04,  -1.01763000e-04,  -2.42637000e-06,
              9.69014000e-05,   1.96216000e-04,   2.95535000e-04,
              3.94851000e-04]), 'volt': DataArray[10]: volt
     array([ 4.98941  ,  3.99618  ,  3.0037   ,  2.01084  ,  1.01763  ,
             0.0242637, -0.969014 , -1.96216  , -2.95535  , -3.94851  ]), 'volt_set': DataArray[10]: volt_set
     array([-5., -4., -3., -2., -1.,  0.,  1.,  2.,  3.,  4.])}



.. code:: ipython3

    station1 = qc.Station(a1,a2)
    station1.set_measurement(a1.volt)
    station2 = qc.Station(a1,a2)
    station2.set_measurement(a1.volt, a2.volt)

.. code:: ipython3

    # Time single readings
    with Timer('Time s1'):
        station1.measure()
    with Timer('Time s2'):
        station2.measure()


.. parsed-literal::

    [Time s1]
    Elapsed: 0.05600309371948242
    [Time s2]
    Elapsed: 0.10500597953796387


.. code:: ipython3

    # Time single readings
    with Timer('Time a1'):
        a1.volt.get()
    with Timer('Time a2'):
        a2.volt.get()


.. parsed-literal::

    [Time a1]
    Elapsed: 0.05600309371948242
    [Time a2]
    Elapsed: 0.049002885818481445


.. code:: ipython3

    with Timer('Time Loop 1'):
        data = qc.Loop(k1.volt[-5:5:1], 0).each(a1.volt).run(location='testsweep', overwrite=True,background=False)
    
    with Timer('Time Loop 2'):
        data = qc.Loop(k1.volt[-5:5:1], 0).each(a1.volt, a2.volt).run(location='testsweep', overwrite=True,background=False)


.. parsed-literal::

    DataSet: DataMode.PUSH_TO_SERVER, location='testsweep'
       volt_set: volt
       volt: volt
    started at 2016-04-21 15:51:15
    [Time Loop 1]
    Elapsed: 0.5770328044891357
    DataSet: DataMode.PUSH_TO_SERVER, location='testsweep'
       volt_set: volt
       volt_0: volt
       volt_1: volt
    started at 2016-04-21 15:51:16
    [Time Loop 2]
    Elapsed: 1.0900623798370361


.. code:: ipython3

    with Timer('Time Loop 1'):
        data = qc.Loop(k1.volt[-5:5:1], 0).each(a1.volt).run(location='testsweep', overwrite=True)
        while data.sync():
            time.sleep(0.1)


.. parsed-literal::

    DataSet: DataMode.PULL_FROM_SERVER, location='testsweep'
       volt_set: volt
       volt: volt
    started at 2016-04-21 15:51:16
    [Time Loop 1]
    Elapsed: 1.075061559677124


.. code:: ipython3

    with Timer('Time Loop 2'):
        data = qc.Loop(k1.volt[-5:5:1], 0).each(a1.volt, a2.volt).run(location='testsweep', overwrite=True)
        while data.sync():
            time.sleep(0.1)


.. parsed-literal::

    DataSet: DataMode.PULL_FROM_SERVER, location='testsweep'
       volt_set: volt
       volt_0: volt
       volt_1: volt
    started at 2016-04-21 15:51:17
    [Time Loop 2]
    Elapsed: 1.569089651107788


